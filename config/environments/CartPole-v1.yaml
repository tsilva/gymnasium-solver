# CartPole-v1 configurations covering classic state-based, reward-shaped, and pixel observations

# =====================
# Environment Specification
# =====================
spec: &spec
  source: https://gymnasium.farama.org/environments/classic_control/cart_pole/
  description: Balance a pole on a moving cart by applying forces to the cart.

  action_space:
    discrete: 2
    labels: {0: push_left, 1: push_right}

  observation_space:
    default: state
    variants:
      state:
        shape: [4]
        dtype: float32
        components:
          - {name: cart_position, range: [-4.8, 4.8]}
          - {name: cart_velocity, range: [-inf, inf]}
          - {name: pole_angle_rad, range: [-0.418, 0.418]}
          - {name: pole_angular_velocity, range: [-inf, inf]}

  rewards:
    per_step: +1
    range: [0, 1]

  returns:
    episodic: number of steps balanced (max 500)
    range: [0, 500]
    threshold_solved: 475


# =====================
# Configuration Anchors
# =====================

_env: &env
  spec: *spec
  env_id: CartPole-v1
  seed: 42
  max_env_steps: 3e5
  normalize_obs: false
  n_envs: 8
  n_steps: 1024
  policy_lr: 6e-3
  hidden_dims: [64, 64]
  gamma: 0.99
  ent_coef: 0.0
  frame_stack: 1
  eval_freq_epochs: 5
  eval_episodes: 100

_ppo: &ppo
  <<: *env
  algo_id: ppo
  max_env_steps: 50000
  n_steps: 32
  batch_size: 0.25
  n_epochs: 20
  gae_lambda: 0.8
  clip_range: 0.2
  policy_lr: 1e-3
  normalize_advantages: "rollout"
  eval_warmup_epochs: 50
  eval_freq_epochs: 10

# Standard PPO on state observations - baseline configuration
ppo:
  <<: *ppo
  description: "Standard PPO on state observations - baseline configuration for CartPole"
