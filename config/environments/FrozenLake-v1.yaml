# FrozenLake-v1 deterministic challenge configurations

# =====================
# Environment Specification
# =====================
spec: &spec
  source: https://gymnasium.farama.org/environments/toy_text/frozen_lake/
  description: Navigate a grid world from start to goal without falling into holes.

  action_space:
    discrete: 4
    labels: {0: LEFT, 1: DOWN, 2: RIGHT, 3: UP}

  observation_space:
    default: grid_4x4
    variants:
      grid_4x4: {n: 16, dtype: int64}
      grid_8x8: {n: 64, dtype: int64}

  rewards:
    on_goal: +1
    otherwise: 0
    range: [0, 1]

  returns:
    episodic: fraction of successes over episodes (stochastic)
    range: [0, 1]
    threshold_solved: 0.78

# =====================
# env variants
# =====================

# Base env
_env: &env
  spec: *spec
  env_id: FrozenLake-v1
  env_kwargs:
    is_slippery: true
    map_name: "4x4"
  env_wrappers:
    - id: DiscreteEncoder
      encoding: array

# Deterministic env
_env_deterministic: &env_deterministic
  <<: *env
  env_kwargs:
    is_slippery: false
    map_name: "4x4"

# =====================
# configs
# =====================

ppo: &ppo
  <<: *env
  algo_id: ppo
  description: "PPO on FrozenLake - standard configuration for grid navigation task"
  eval_episodes: 10
  eval_freq_epochs: 10
  n_steps: 512
  hidden_dims: [64]
  policy_lr: 9e-3

ppo_deterministic:
  <<: *ppo
  <<: *env_deterministic
  description: "PPO on FrozenLake deterministic - no slippery ice, easier navigation"
