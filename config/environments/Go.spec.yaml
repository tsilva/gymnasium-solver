# PettingZoo Go (single-agent wrapper)
source: https://pettingzoo.farama.org/environments/classic/go/
description: Outcome-based rewards; agent plays first on a small board with masked illegal moves.

action_space:
  # On 9x9, legal positions are 81 plus pass/resign; PZ masks illegal moves.
  discrete: 83

observation_space:
  default: board
  variants:
    # Use symbolic dimensions since exact channels can vary by implementation
    board:
      shape: [H, W, C]
      dtype: uint8
      range: [0, 255]

rewards:
  # Go is outcome-based; per-step rewards are usually 0, final +/-1
  reward_unit: 1.0
  range: [-1, 1]

versions:
  v0: Initial wrapper around PettingZoo parallel Go env

notes: |
  This describes the PettingZoo Go environment (parallel). The agent wrapper
  in this repo controls the first agent and auto-plays opponents randomly.
  Legal move masking should be handled by the env; the policy may still need
  to learn to avoid illegal moves if masking isn't enforced in the wrapper.
