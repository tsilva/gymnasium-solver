# SuperMarioBros-Nes with RGB observations (preprocessed to grayscale+84x84+frame-stack)

# =====================
# Environment Specification
# =====================
spec:
  source: https://github.com/Farama-Foundation/stable-retro
  description: >
    Side-scrolling platformer. Guide Mario through levels to reach the flagpole
    while avoiding enemies and hazards. Observations are raw game frames; rewards
    typically reflect in-game score/progress.

  render_fps: 60

  action_space:
    # When using stable-retro with use_restricted_actions=FILTERED, actions are a
    # filtered discrete set of gamepad combinations. Exact count can vary by game.
    note: filtered discrete action set (retro.Actions.FILTERED)

  observation_space:
    default: rgb
    variants:
      rgb:
        shape: [240, 256, 3]
        dtype: uint8
        range: [0, 255]
        note: NES native resolution; pipeline typically grayscales+resizes+stacks frames.

  rewards:
    description: >
      Environment returns score/progress deltas; death or timeouts end episodes.
    components:
      - {name: score_delta, sign: positive}
      - {name: progress, sign: positive}
      - {name: death_penalty, sign: negative}


# =====================
# Configuration Anchors
# =====================

_env: &env
  env_id: Retro/SuperMarioBros-Nes
  env_kwargs:
    state: "Level1-1"
  policy: 'cnn'
  policy_kwargs:
    channels: [32, 64, 64]
    kernel_sizes: [8, 4, 3]
    strides: [4, 2, 1]
  grayscale_obs: true
  resize_obs: true
  frame_stack: 4
  accelerator: 'gpu'
  devices: 'auto'
  eval_freq_epochs: 5
  eval_episodes: 3
  max_timesteps: 3e6
  n_envs: 8
  n_steps: 256
  batch_size: 1024

_ppo: &ppo
  <<: *env
  algo_id: ppo
  n_epochs: 3
  clip_range: 0.1
  policy_lr: 1e-4
  eval_freq_epochs: 20
  eval_episodes: 5

# PPO on SuperMarioBros - standard configuration for Mario platformer game
ppo:
  <<: *ppo
  description: "PPO on SuperMarioBros - standard configuration for Mario platformer game"
