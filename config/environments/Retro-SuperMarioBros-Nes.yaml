# SuperMarioBros-Nes with RGB observations (preprocessed to grayscale+84x84+frame-stack)

# =====================
# Environment Specification
# =====================
spec: &spec
  source: https://github.com/Farama-Foundation/stable-retro
  description: >
    Side-scrolling platformer. Guide Mario through levels to reach the flagpole
    while avoiding enemies and hazards. Observations are raw game frames; rewards
    typically reflect in-game score/progress.

  render_fps: 60

  action_space:
    # When using stable-retro with use_restricted_actions=FILTERED, actions are a
    # filtered discrete set of gamepad combinations. Exact count can vary by game.
    note: filtered discrete action set (retro.Actions.FILTERED)

  observation_space:
    default: rgb
    variants:
      rgb:
        shape: [240, 256, 3]
        dtype: uint8
        range: [0, 255]
        note: NES native resolution; pipeline typically grayscales+resizes+stacks frames.

  rewards:
    description: >
      Environment returns score/progress deltas; death or timeouts end episodes.
    components:
      - {name: score_delta, sign: positive}
      - {name: progress, sign: positive}
      - {name: death_penalty, sign: negative}


# =====================
# env variants
# =====================

# Base env
_env: &env
  spec: *spec
  env_id: Retro/SuperMarioBros-Nes
  render_mode: 'rgb_array'
  env_kwargs:
    state: "Level1-1"
  max_episode_steps: 1000
  # RGB preprocessing for CNN policy
  policy: cnn_actorcritic
  grayscale_obs: true
  resize_obs: [84, 84]
  frame_stack: 4
  # Retro library only allows one emulator instance per process
  n_envs: 2
  vectorization_mode: async

# =====================
# configs
# =====================

ppo:
  <<: *env
  project_id: Retro-SuperMarioBros-Nes
  algo_id: ppo
  description: "PPO on SuperMarioBros - standard configuration for Mario platformer game"
  max_env_steps: 3e6
  eval_freq_epochs: 1
  eval_episodes: 1
  n_steps: 256
  n_epochs: 3
  clip_range: 0.1
  policy_lr: 1e-4
